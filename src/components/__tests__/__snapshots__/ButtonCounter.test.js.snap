// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test ButtonCounter 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 6,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      0
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      <Text />
    </Text>
  </View>
</View>
`;

exports[`Test ButtonCounter 10 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      style={
        Object {
          "fontFamily": "SourceSansPro_400Regular",
          "fontSize": 36,
        }
      }
    >
      10
    </Text>
    <Text
      style={
        Object {
          "fontFamily": "SourceSansPro_400Regular",
          "fontSize": 36,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            undefined,
            Object {
              "fontFamily": "simple-line-icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </Text>
  </View>
</View>
`;

exports[`Test ButtonCounter disabled 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 6,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Array [
            Object {
              "fontFamily": "SourceSansPro_600SemiBold",
              "fontSize": 40,
              "lineHeight": 42,
              "marginRight": 5,
            },
            Object {
              "alignItems": "center",
              "color": "#666",
              "flexDirection": "row",
              "fontFamily": "SourceSansPro_400Regular",
              "justifyContent": "center",
            },
          ],
        ]
      }
    >
      0
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Array [
            Object {
              "fontFamily": "SourceSansPro_600SemiBold",
              "fontSize": 40,
              "lineHeight": 42,
              "marginRight": 5,
            },
            Object {
              "alignItems": "center",
              "color": "#666",
              "flexDirection": "row",
              "fontFamily": "SourceSansPro_400Regular",
              "justifyContent": "center",
            },
          ],
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            undefined,
            Object {
              "fontFamily": "simple-line-icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </Text>
  </View>
</View>
`;

exports[`Test ButtonCounter highlight 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 6,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      0
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            undefined,
            Object {
              "fontFamily": "simple-line-icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </Text>
  </View>
</View>
`;

exports[`Test ButtonCounter highlight 10 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 6,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      0
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "SourceSansPro_400Regular",
            "fontSize": 36,
          },
          Object {
            "fontFamily": "SourceSansPro_600SemiBold",
            "fontSize": 40,
            "lineHeight": 42,
            "marginRight": 5,
          },
        ]
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            undefined,
            Object {
              "fontFamily": "simple-line-icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </Text>
  </View>
</View>
`;
